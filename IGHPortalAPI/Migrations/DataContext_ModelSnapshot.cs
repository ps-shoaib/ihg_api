// <auto-generated />
using System;
using IGHportalAPI.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IGHportalAPI.Migrations
{
    [DbContext(typeof(DataContext_))]
    partial class DataContext_ModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DepartmentEmployee", b =>
                {
                    b.Property<int>("DepartmentsId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentsId", "EmployeesId");

                    b.HasIndex("EmployeesId");

                    b.ToTable("DepartmentEmployee");
                });

            modelBuilder.Entity("HotelUser", b =>
                {
                    b.Property<int>("HotelsId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("HotelsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("HotelUser");
                });

            modelBuilder.Entity("IGHportalAPI.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<short>("UpdatedStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("IGHportalAPI.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<float>("HourlyRate")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("OverTimeRate")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<short>("UpdatedStatus")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("IGHportalAPI.Models.EmployeesDepartments", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "DepartmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("employeesDepartments");
                });

            modelBuilder.Entity("IGHportalAPI.Models.HotelUser", b =>
                {
                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("HotelsId")
                        .HasColumnType("int");

                    b.HasKey("UsersId", "HotelsId");

                    b.HasIndex("HotelsId");

                    b.ToTable("HotelUsers");
                });

            modelBuilder.Entity("IGHportalAPI.Models.LinenInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportMonthYear")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HotelId");

                    b.ToTable("LinenInventories");
                });

            modelBuilder.Entity("IGHportalAPI.Models.LinenInventoryDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Dirty")
                        .HasColumnType("int");

                    b.Property<int>("EndingBalanceOfMonth")
                        .HasColumnType("int");

                    b.Property<int>("InRooms")
                        .HasColumnType("int");

                    b.Property<int>("LastMonthEndingBalance")
                        .HasColumnType("int");

                    b.Property<int>("LinenInventoryId")
                        .HasColumnType("int");

                    b.Property<int>("LinenItemId")
                        .HasColumnType("int");

                    b.Property<int>("MonthlyTotalLoss")
                        .HasColumnType("int");

                    b.Property<int>("NewPurchases")
                        .HasColumnType("int");

                    b.Property<int>("OneTurnForAllRooms")
                        .HasColumnType("int");

                    b.Property<int>("QuantityTobeOrdered")
                        .HasColumnType("int");

                    b.Property<int>("RequiredPar")
                        .HasColumnType("int");

                    b.Property<int>("RequiredTurns")
                        .HasColumnType("int");

                    b.Property<int>("fifthFloorStorage")
                        .HasColumnType("int");

                    b.Property<int>("firstFloorStorage")
                        .HasColumnType("int");

                    b.Property<int>("fourthFloorStorage")
                        .HasColumnType("int");

                    b.Property<int>("secondFloorStorage")
                        .HasColumnType("int");

                    b.Property<int>("thirdFloorStorage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinenInventoryId");

                    b.HasIndex("LinenItemId");

                    b.ToTable("LinenInventoryDetails");
                });

            modelBuilder.Entity("IGHportalAPI.Models.LinenItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HotelId");

                    b.ToTable("LinenItems");
                });

            modelBuilder.Entity("IGHportalAPI.Models.PayrollDepartmentGoals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Goal")
                        .HasColumnType("int");

                    b.Property<int>("PayrollReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PayrollReportId");

                    b.ToTable("PayrollDepartmentGoals");
                });

            modelBuilder.Entity("IGHportalAPI.Models.PayrollReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReportTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalRoomSold")
                        .HasColumnType("int");

                    b.Property<int>("TotalRoomsCleaned")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HotelId");

                    b.ToTable("PayrollReports");
                });

            modelBuilder.Entity("IGHportalAPI.Models.PayrollReportsDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<float>("HourlyRate")
                        .HasColumnType("real");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("OvertimeHourlyRate")
                        .HasColumnType("real");

                    b.Property<int>("PayrollReportId")
                        .HasColumnType("int");

                    b.Property<float>("TotalHoursWorked")
                        .HasColumnType("real");

                    b.Property<float>("TotalOverTimeHoursWorked")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HotelId");

                    b.HasIndex("PayrollReportId");

                    b.ToTable("PayrollReportsDetails");
                });

            modelBuilder.Entity("IGHportalAPI.Models.Scores_Issues", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScoresIssues");
                });

            modelBuilder.Entity("IGHportalAPI.Models.SundriesShopInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportMonthYear")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HotelId");

                    b.ToTable("SundriesShopInventories");
                });

            modelBuilder.Entity("IGHportalAPI.Models.SundriesShopInventoryDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BackupStore")
                        .HasColumnType("int");

                    b.Property<float>("CostOfExpiredLogged")
                        .HasColumnType("real");

                    b.Property<float>("CostOfSale")
                        .HasColumnType("real");

                    b.Property<float>("CurrentStockRetail")
                        .HasColumnType("real");

                    b.Property<int>("ExpiredLogged")
                        .HasColumnType("int");

                    b.Property<float>("ItemRetailCost")
                        .HasColumnType("real");

                    b.Property<float>("ItemWholeSaleCost")
                        .HasColumnType("real");

                    b.Property<int>("LastMonthEndingBalance")
                        .HasColumnType("int");

                    b.Property<float>("MonthRevenue")
                        .HasColumnType("real");

                    b.Property<int>("MonthsEndingBalance")
                        .HasColumnType("int");

                    b.Property<int>("NewlyPurchased")
                        .HasColumnType("int");

                    b.Property<int>("OnDisplay")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductSales")
                        .HasColumnType("int");

                    b.Property<int>("SundriesShopInventoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SundriesShopInventoryId");

                    b.ToTable("SundriesShopInventoryDetails");
                });

            modelBuilder.Entity("IGHportalAPI.Models.SundriesShopProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HotelId");

                    b.ToTable("SundriesShopProducts");
                });

            modelBuilder.Entity("IGHportalAPI.Models.WeeklyWrapUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments_Variance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commments_GOP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Current_MTD_Revenue")
                        .HasColumnType("real");

                    b.Property<float>("Current_YTD_Revenue")
                        .HasColumnType("real");

                    b.Property<string>("Explanations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<float>("Previous_Year_MTD_Revenue")
                        .HasColumnType("real");

                    b.Property<float>("Previous_Year_YTD_Revenue")
                        .HasColumnType("real");

                    b.Property<DateTime>("ReportFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReportTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("files")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HotelId");

                    b.ToTable("WeeklyWrapUps");
                });

            modelBuilder.Entity("IGHportalAPI.Models.WeeklyWrapUp_BankDeposit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Actual_Deposit")
                        .HasColumnType("real");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<float>("System_Deposit_Amount")
                        .HasColumnType("real");

                    b.Property<int>("WeeklyWrapUpId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeeklyWrapUpId");

                    b.ToTable("WeeklyWrapUpBankDeposits");
                });

            modelBuilder.Entity("IGHportalAPI.Models.WeeklyWrapUp_Operations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand_Zone_Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Current_Training_Credits")
                        .HasColumnType("real");

                    b.Property<float>("HCM_score")
                        .HasColumnType("real");

                    b.Property<string>("Maintenance_Issues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSAT_Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("OSAT_Rolling")
                        .HasColumnType("real");

                    b.Property<string>("Out_of_order_room_notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIP_Issues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PTD_Resolution_Score")
                        .HasColumnType("real");

                    b.Property<string>("Plan_To_Improve_Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReportTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("WeeklyWrapUpId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeeklyWrapUpId")
                        .IsUnique();

                    b.ToTable("WeeklyWrapUpOperations");
                });

            modelBuilder.Entity("IGHportalAPI.Models.WeeklyWrapUp_OperationsDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Annual_Goal")
                        .HasColumnType("real");

                    b.Property<float>("Brand_Average")
                        .HasColumnType("real");

                    b.Property<float>("Current_Month_Score")
                        .HasColumnType("real");

                    b.Property<float>("Previous_Month_Score")
                        .HasColumnType("real");

                    b.Property<int>("Scores_IssuesId")
                        .HasColumnType("int");

                    b.Property<int>("WeeklyWrapUp_OperationsId")
                        .HasColumnType("int");

                    b.Property<float>("YTD_score")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Scores_IssuesId");

                    b.HasIndex("WeeklyWrapUp_OperationsId");

                    b.ToTable("WeeklyWrapUpOperationsDetails");
                });

            modelBuilder.Entity("IGHportalAPI.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<short>("UpdatedStatus")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("IGHportalAPI.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DepartmentEmployee", b =>
                {
                    b.HasOne("IGHportalAPI.Models.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IGHportalAPI.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotelUser", b =>
                {
                    b.HasOne("IGHportalAPI.Models.Hotel", null)
                        .WithMany()
                        .HasForeignKey("HotelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IGHportalAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IGHportalAPI.Models.Department", b =>
                {
                    b.HasOne("IGHportalAPI.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IGHportalAPI.Models.User", null)
                        .WithMany("Departments")
                        .HasForeignKey("UserId");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("IGHportalAPI.Models.Employee", b =>
                {
                    b.HasOne("IGHportalAPI.Models.Hotel", "Hotel")
                        .WithMany("Employees")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("IGHportalAPI.Models.EmployeesDepartments", b =>
                {
                    b.HasOne("IGHportalAPI.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IGHportalAPI.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("IGHportalAPI.Models.HotelUser", b =>
                {
                    b.HasOne("IGHportalAPI.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IGHportalAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IGHportalAPI.Models.LinenInventory", b =>
                {
                    b.HasOne("IGHportalAPI.Models.User", "User")
                        .WithMany("LinenInventories")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("IGHportalAPI.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IGHportalAPI.Models.LinenInventoryDetails", b =>
                {
                    b.HasOne("IGHportalAPI.Models.LinenInventory", "LinenInventory")
                        .WithMany("LinenInventoryDetails")
                        .HasForeignKey("LinenInventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IGHportalAPI.Models.LinenItem", "LinenItem")
                        .WithMany("LinenInventoryDetails")
                        .HasForeignKey("LinenItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LinenInventory");

                    b.Navigation("LinenItem");
                });

            modelBuilder.Entity("IGHportalAPI.Models.LinenItem", b =>
                {
                    b.HasOne("IGHportalAPI.Models.User", "User")
                        .WithMany("LinenItems")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("IGHportalAPI.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IGHportalAPI.Models.PayrollDepartmentGoals", b =>
                {
                    b.HasOne("IGHportalAPI.Models.Department", "Department")
                        .WithMany("PayrollDepartmentGoals")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IGHportalAPI.Models.PayrollReport", "PayrollReport")
                        .WithMany("PayrollDepartmentGoals")
                        .HasForeignKey("PayrollReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("PayrollReport");
                });

            modelBuilder.Entity("IGHportalAPI.Models.PayrollReport", b =>
                {
                    b.HasOne("IGHportalAPI.Models.User", "User")
                        .WithMany("PayrollReports")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("IGHportalAPI.Models.Hotel", "Hotel")
                        .WithMany("PayrollReports")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IGHportalAPI.Models.PayrollReportsDetails", b =>
                {
                    b.HasOne("IGHportalAPI.Models.Department", "Department")
                        .WithMany("PayrollReportsDetails")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IGHportalAPI.Models.Employee", "Employee")
                        .WithMany("PayrollReportsDetails")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IGHportalAPI.Models.Hotel", "Hotel")
                        .WithMany("PayrollReportsDetails")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IGHportalAPI.Models.PayrollReport", "PayrollReport")
                        .WithMany("PayrollReportsDetails")
                        .HasForeignKey("PayrollReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");

                    b.Navigation("Hotel");

                    b.Navigation("PayrollReport");
                });

            modelBuilder.Entity("IGHportalAPI.Models.SundriesShopInventory", b =>
                {
                    b.HasOne("IGHportalAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("IGHportalAPI.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IGHportalAPI.Models.SundriesShopInventoryDetails", b =>
                {
                    b.HasOne("IGHportalAPI.Models.SundriesShopProduct", "SundriesShopProduct")
                        .WithMany("SundriesShopInventories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IGHportalAPI.Models.SundriesShopInventory", "SundriesShopInventory")
                        .WithMany("SundriesShopInventoryDetails")
                        .HasForeignKey("SundriesShopInventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SundriesShopInventory");

                    b.Navigation("SundriesShopProduct");
                });

            modelBuilder.Entity("IGHportalAPI.Models.SundriesShopProduct", b =>
                {
                    b.HasOne("IGHportalAPI.Models.User", "User")
                        .WithMany("SundriesShopProducts")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("IGHportalAPI.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IGHportalAPI.Models.WeeklyWrapUp", b =>
                {
                    b.HasOne("IGHportalAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("IGHportalAPI.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IGHportalAPI.Models.WeeklyWrapUp_BankDeposit", b =>
                {
                    b.HasOne("IGHportalAPI.Models.WeeklyWrapUp", "WeeklyWrapUp")
                        .WithMany("WeeklyWrapUp_BankDeposits")
                        .HasForeignKey("WeeklyWrapUpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeeklyWrapUp");
                });

            modelBuilder.Entity("IGHportalAPI.Models.WeeklyWrapUp_Operations", b =>
                {
                    b.HasOne("IGHportalAPI.Models.WeeklyWrapUp", "WeeklyWrapUp")
                        .WithOne("WeeklyWrapUp_Operations")
                        .HasForeignKey("IGHportalAPI.Models.WeeklyWrapUp_Operations", "WeeklyWrapUpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeeklyWrapUp");
                });

            modelBuilder.Entity("IGHportalAPI.Models.WeeklyWrapUp_OperationsDetails", b =>
                {
                    b.HasOne("IGHportalAPI.Models.Scores_Issues", "Scores_Issues")
                        .WithMany()
                        .HasForeignKey("Scores_IssuesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IGHportalAPI.Models.WeeklyWrapUp_Operations", "WeeklyWrapUp_Operations")
                        .WithMany("weeklyWrapUp_OperationsDetails")
                        .HasForeignKey("WeeklyWrapUp_OperationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scores_Issues");

                    b.Navigation("WeeklyWrapUp_Operations");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("IGHportalAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("IGHportalAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IGHportalAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("IGHportalAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IGHportalAPI.Models.Department", b =>
                {
                    b.Navigation("PayrollDepartmentGoals");

                    b.Navigation("PayrollReportsDetails");
                });

            modelBuilder.Entity("IGHportalAPI.Models.Employee", b =>
                {
                    b.Navigation("PayrollReportsDetails");
                });

            modelBuilder.Entity("IGHportalAPI.Models.LinenInventory", b =>
                {
                    b.Navigation("LinenInventoryDetails");
                });

            modelBuilder.Entity("IGHportalAPI.Models.LinenItem", b =>
                {
                    b.Navigation("LinenInventoryDetails");
                });

            modelBuilder.Entity("IGHportalAPI.Models.PayrollReport", b =>
                {
                    b.Navigation("PayrollDepartmentGoals");

                    b.Navigation("PayrollReportsDetails");
                });

            modelBuilder.Entity("IGHportalAPI.Models.SundriesShopInventory", b =>
                {
                    b.Navigation("SundriesShopInventoryDetails");
                });

            modelBuilder.Entity("IGHportalAPI.Models.SundriesShopProduct", b =>
                {
                    b.Navigation("SundriesShopInventories");
                });

            modelBuilder.Entity("IGHportalAPI.Models.WeeklyWrapUp", b =>
                {
                    b.Navigation("WeeklyWrapUp_BankDeposits");

                    b.Navigation("WeeklyWrapUp_Operations");
                });

            modelBuilder.Entity("IGHportalAPI.Models.WeeklyWrapUp_Operations", b =>
                {
                    b.Navigation("weeklyWrapUp_OperationsDetails");
                });

            modelBuilder.Entity("IGHportalAPI.Models.Hotel", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("PayrollReports");

                    b.Navigation("PayrollReportsDetails");
                });

            modelBuilder.Entity("IGHportalAPI.Models.User", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("LinenInventories");

                    b.Navigation("LinenItems");

                    b.Navigation("PayrollReports");

                    b.Navigation("SundriesShopProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
